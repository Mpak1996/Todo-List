{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","Todo","todo","map","item","filter","el","TodoList","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NA+BeA,EA5BF,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAe3C,OACI,iCACF,uBAAOC,MAAOJ,EAAWK,SAfF,SAACC,GACtBC,QAAQC,IAAIF,EAAEG,OAAOL,OACrBH,EAAaK,EAAEG,OAAOL,QAa6BM,KAAK,OAAOC,UAAU,eAC3E,wBAAQC,QAZgB,SAACN,GACvBA,EAAEO,iBACFV,EAAS,GAAD,mBACDD,GADC,CAEJ,CAACY,KAAMd,EAAWe,WAAW,EAAOC,GAAoB,IAAhBC,KAAKC,aAEjDjB,EAAa,KAMqBU,UAAU,cAAcD,KAAK,SAAjE,SACE,mBAAGC,UAAU,6B,OCuBNQ,EA3CF,SAAC,GAAqC,IAAnCL,EAAkC,EAAlCA,KAAMM,EAA4B,EAA5BA,KAAMlB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SA0B/B,OACI,sBAAKQ,UAAU,OAAf,UACI,oBAAIA,UAAS,oBAAeS,EAAKL,UAAY,YAAc,GAA9C,KAAb,SAAmED,IACnE,wBAAQF,QAtBQ,WACpBT,EACID,EAAMmB,KAAI,SAACC,GACX,OAAGA,EAAKN,KAAOI,EAAKJ,GACT,2BACAM,GADP,IACaP,WAAYO,EAAKP,YAI3BO,OAa2BX,UAAU,eAA5C,SACI,mBAAGA,UAAU,mBAEjB,wBAAQC,QA9BM,WAElBT,EAASD,EAAMqB,QAAO,SAACC,GAAD,OAAQA,EAAGR,KAAOI,EAAKJ,QA4BTL,UAAU,YAA1C,SACI,mBAAGA,UAAU,uBCLdc,EA1BE,SAAC,GAAyB,IAAvBvB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAEvB,OACI,qBAAKQ,UAAU,iBAAf,SACI,oBAAIA,UAAU,YAAd,SACKT,EAAMmB,KAAI,SAAED,GAAF,OACP,cAAC,EAAD,CAEQN,KAAMM,EAAKN,KACXX,SAAUA,EACVD,MAAOA,EACPkB,KAAMA,GAJDA,EAAKJ,YCQvBU,MAdf,WACE,MAAkCC,mBAAS,IAA3C,mBAAO3B,EAAP,KAAkBC,EAAlB,KACA,EAA0B0B,mBAAS,IAAnC,mBAAOzB,EAAP,KAAcC,EAAd,KACA,OACE,sBAAKQ,UAAU,MAAf,UACE,iCACA,kDAEA,cAAC,EAAD,CAAMX,UAAaA,EAAWE,MAASA,EAAOC,SAAYA,EAAUF,aAAgBA,IACpF,cAAC,EAAD,CAAUE,SAAUA,EAAUD,MAAOA,QCF5B0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b6745886.chunk.js","sourcesContent":["import React from \"react\";\n\n\nconst Form = ({inputText, setInputText, todos, setTodos}) => {\n\n    const inputTextHandler = (e) => {\n        console.log(e.target.value);\n        setInputText(e.target.value);\n    };\n    const submitTodoHandler = (e) => {\n        e.preventDefault();\n        setTodos([\n            ...todos, \n            {text: inputText, completed: false, id: Math.random() * 1000 },\n        ]);\n        setInputText(\"\");\n    };\n\n    return(\n        <form>\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      \n    </form>\n    );\n\n}\n\n\nexport default Form;","import React from 'react';\n\nconst Todo = ({ text, todo, todos, setTodos }) => {\n    //Events\n    const deleteHandler = () => {\n\n        setTodos(todos.filter((el) => el.id !== todo.id));\n        \n    }\n    const completeHandler = () => {\n        setTodos(\n            todos.map((item) =>  {\n            if(item.id === todo.id){\n                return {\n                    ...item, completed: !item.completed \n                };\n                \n            }\n            return item;\n           \n\n        })\n        );\n\n\n\n    };\n\n    return(\n        <div className=\"todo\">\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"} `}>{text}</li>\n            <button onClick={completeHandler} className=\"complete-btn\">\n                <i className=\"fas fa-check\"></i>\n                </button>\n            <button onClick={deleteHandler} className=\"trash-btn\" >\n                <i className=\"fas fa-trash\"></i>\n            </button>\n        </div> \n    );\n\n\n\n}\n\n\nexport default Todo;","import React from \"react\";\nimport Todo from './Todo';\n\n\nconst TodoList = ( {todos, setTodos} ) => {\n   \n    return (\n        <div className=\"todo-container\">\n            <ul className=\"todo-list\">\n                {todos.map(( todo ) => (\n                    <Todo   \n                            key={todo.id} \n                            text={todo.text} \n                            setTodos={setTodos} \n                            todos={todos}\n                            todo={todo}\n                    \n                    />\n                ))\n\n                }\n            </ul>\n        </div>\n\n    );\n\n\n}\n\n\nexport default TodoList;","import React, { useState } from \"react\";\nimport './App.css';\nimport Form from'./components/Form';\nimport Todolist from './components/TodoList'\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  return (\n    <div className=\"App\">\n      <header>\n      <h1>Todo List App </h1>\n      </header>\n      <Form inputText = {inputText} todos = {todos} setTodos = {setTodos} setInputText = {setInputText}/>\n      <Todolist setTodos={setTodos} todos={todos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}